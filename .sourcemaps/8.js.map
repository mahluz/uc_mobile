{"version":3,"sources":["../../src/pages/login/login.module.ts","../../src/pages/login/login.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACa;AACN;AAEZ;AAcpC;IAAA;IAA+B,CAAC;IAAnB,eAAe;QAZ3B,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,yDAAS;aACV;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,yDAAS,CAAC;gBACnC,4EAAe,CAAC,QAAQ,EAAE;aAC3B;YACD,OAAO,EAAE;gBACP,yDAAS;aACV;SACF,CAAC;OACW,eAAe,CAAI;IAAD,sBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;AClBc;AACa;AACqD;AAE3D;AACb;AAE4C;AAEhF,4CAA4C;AAO5C;IAWE,gDAAgD;IAEhD,8BAA8B;IAC9B,oCAAoC;IAEpC,mBAAmB,OAAsB,EAChC,IAAU,EACV,SAA0B,EAC1B,gBAAkC,EACjC,IAAwB,EACxB,SAAyB,EACzB,WAA6B;QANpB,YAAO,GAAP,OAAO,CAAe;QAChC,SAAI,GAAJ,IAAI,CAAM;QACV,cAAS,GAAT,SAAS,CAAiB;QAC1B,qBAAgB,GAAhB,gBAAgB,CAAkB;QACjC,SAAI,GAAJ,IAAI,CAAoB;QACxB,cAAS,GAAT,SAAS,CAAgB;QACzB,gBAAW,GAAX,WAAW,CAAkB;QAhBvC,wBAAmB,GAAwC;YACzD,KAAK,EAAE,eAAe;YACtB,QAAQ,EAAE,QAAQ;SACnB,CAAC;IAgBF,CAAC;IAED,+BAAW,GAAX;QACE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YACrC,OAAO,EAAE,gBAAgB;YACzB,mBAAmB,EAAC,IAAI;SACzB,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;IACzB,CAAC;IAED,6BAAS,GAAT,UAAU,IAAI;QACZ,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QAEvB,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAChC,KAAK,EAAC,MAAM;YACZ,QAAQ,EAAC,IAAI;YACb,OAAO,EAAC,CAAC,IAAI,CAAC;SACf,CAAC,CAAC;QAEH,KAAK,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;IAED,+CAA+C;IAC/C,2BAAO,GAAP;QAAA,iBAyBC;QAvBC,IAAI,CAAC,WAAW,EAAE,CAAC;QAEnB,kEAAkE;QAClE,iCAAiC;QACjC,gBAAgB;QAChB,iCAAiC;QACjC,wBAAwB;QACxB,wCAAwC;QACxC,sCAAsC;QACtC,sBAAsB;QACtB,sBAAsB;QACtB,QAAQ;QACR,qBAAqB;QACrB,MAAM;QAEN,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,SAAS,CAAC,iBAAO;YACzD,EAAE,EAAC,OAAO,CAAC,EAAC;gBACV,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,wDAAQ,CAAC,CAAC;YAC9B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;YAClC,CAAC;QACH,CAAC,CAAC,CAAC;IAEL,CAAC;IA1EU,SAAS;QAJrB,wEAAS,CAAC;YACT,QAAQ,EAAE,YAAY;WACG;SAC1B,CAAC;+EAiByC;YAC1B,sEAAI;YACC,6EAAe;YACR,iGAAgB;YAC5B,uEAAmB;YACd,wEAAe;YACb,MAAiB;OAtB5B,SAAS,CA2ErB;IAAD,CAAC;AAAA;SA3EY,SAAS,e","file":"8.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\n\r\nimport { LoginPage } from './login';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(LoginPage),\r\n    TranslateModule.forChild()\r\n  ],\r\n  exports: [\r\n    LoginPage\r\n  ]\r\n})\r\nexport class LoginPageModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","import { Component } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { IonicPage, NavController, ToastController, AlertController, LoadingController, Loading } from 'ionic-angular';\r\n\r\nimport { User } from '../../providers/providers';\r\nimport { MainPage } from '../pages';\r\n\r\nimport { AuthServiceProvider } from '../../providers/auth-service/auth-service';\r\n\r\n// import { Storage } from '@ionic/storage';\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-login',\r\n  templateUrl: 'login.html'\r\n})\r\nexport class LoginPage {\r\n  // The registerCredentials fields for the login form.\r\n  // If you're using the username field with or without email, make\r\n  // sure to add it to the type\r\n  loading:Loading;\r\n\r\n  registerCredentials: { email: string, password: string } = {\r\n    email: 'eka@gmail.com',\r\n    password: 'eka123'\r\n  };\r\n\r\n  // registerCredentials = {email:'',password:''};\r\n\r\n  // Our translated text strings\r\n  // private loginErrorString: string;\r\n\r\n  constructor(public navCtrl: NavController,\r\n    public user: User,\r\n    public toastCtrl: ToastController,\r\n    public translateService: TranslateService,\r\n    private auth:AuthServiceProvider,\r\n    private alertCtrl:AlertController,\r\n    private loadingCtrl:LoadingController\r\n    ) {\r\n\r\n  }\r\n\r\n  showLoading(){\r\n    this.loading = this.loadingCtrl.create({\r\n      content: 'please wait...',\r\n      dismissOnPageChange:true\r\n    });\r\n\r\n    this.loading.present();\r\n  }\r\n\r\n  showError(text){\r\n    this.loading.dismiss();\r\n\r\n    let alert = this.alertCtrl.create({\r\n      title:'Fail',\r\n      subTitle:text,\r\n      buttons:['OK']\r\n    });\r\n\r\n    alert.present();\r\n  }\r\n\r\n  // Attempt to login in through our User service\r\n  doLogin() {\r\n\r\n    this.showLoading();\r\n\r\n    // this.user.login(this.registerCredentials).subscribe((resp) => {\r\n    //   this.navCtrl.push(MainPage);\r\n    // }, (err) => {\r\n    //   this.navCtrl.push(MainPage);\r\n    //   // Unable to log in\r\n    //   let toast = this.toastCtrl.create({\r\n    //     message: this.loginErrorString,\r\n    //     duration: 3000,\r\n    //     position: 'top'\r\n    //   });\r\n    //   toast.present();\r\n    // });\r\n\r\n    this.auth.login(this.registerCredentials).subscribe(allowed=>{\r\n      if(allowed){\r\n        this.navCtrl.push(MainPage);\r\n      } else {\r\n        this.showError('Access Denied');\r\n      }\r\n    });\r\n\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts"],"sourceRoot":""}